// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import <LoggerInterface.camkes>;
import <ProcessControlInterface.camkes>;
import <PackageManagementInterface.camkes>;
import <MlCoordinatorInterface.camkes>;
import <MemoryInterface.camkes>;
import <SecurityCoordinatorInterface.camkes>;
import <TimerServiceInterface.camkes>;
import <SDKManagerInterface.camkes>;

component DebugConsole {
  control;

  dataport Buf(0x1000000) cpio_archive;

  dataport Buf tx_dataport;
  uses rust_write_inf uart_write;

  dataport Buf rx_dataport;
  uses rust_read_inf uart_read;

  provides LoggerInterface logger;
  uses MemoryInterface memory;
  uses MlCoordinatorInterface mlcoord;
  uses PackageManagementInterface pkg_mgmt;
  uses ProcessControlInterface proc_ctrl;
  // TODO(b/200707300): for debugging
  maybe uses SecurityCoordinatorInterface security;
  maybe uses SDKManagerInterface sdk_manager;

  uses Timer timer;

  // Enable KataOS CAmkES support.
  attribute int kataos = true;

  // Install requires enough slots to hold dynamically allocated
  // memory for package contents. Size this to handle up to 4MB
  // (at 4KB / page) though that exceeds our target memory config.
  attribute int cnode_headroom = 1024;

  // Copyregions for zmodem upload and for loading bundle images.
  // Could do this with one region since upload never happens
  // concurrently with bundle image loading.
  has copyregion BUNDLE_IMAGE;
  has copyregion UPLOAD;
}
